// Code generated by MockGen. DO NOT EDIT.
// Source: xbooklab/models (interfaces: UserInteractionRepo)

// Package models is a generated GoMock package.
package models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserInteractionRepo is a mock of UserInteractionRepo interface.
type MockUserInteractionRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUserInteractionRepoMockRecorder
}

// MockUserInteractionRepoMockRecorder is the mock recorder for MockUserInteractionRepo.
type MockUserInteractionRepoMockRecorder struct {
	mock *MockUserInteractionRepo
}

// NewMockUserInteractionRepo creates a new mock instance.
func NewMockUserInteractionRepo(ctrl *gomock.Controller) *MockUserInteractionRepo {
	mock := &MockUserInteractionRepo{ctrl: ctrl}
	mock.recorder = &MockUserInteractionRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInteractionRepo) EXPECT() *MockUserInteractionRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserInteractionRepo) Create(arg0 UserInteraction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserInteractionRepoMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserInteractionRepo)(nil).Create), arg0)
}

// GetAll mocks base method.
func (m *MockUserInteractionRepo) GetAll() ([]UserInteraction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]UserInteraction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockUserInteractionRepoMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockUserInteractionRepo)(nil).GetAll))
}
