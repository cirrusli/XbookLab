syntax = "proto3";

package xbooklab;
option go_package = "./;xbooklab";

service XbookLab {
  // User
  rpc Register(RegisterReq) returns (RegisterResp);
  rpc GetUserProfile(GetUserProfileReq) returns (GetUserProfileResp);
  rpc UpdateUserProfile(UpdateUserProfileReq) returns (UpdateUserProfileResp);
  rpc UploadAvatar(UploadAvatarReq) returns (UploadAvatarResp);// 看看和上一个接口合并？
  rpc DeleteUser(DeleteUserReq) returns (DeleteUserResp);

  // Auth
  rpc Login(LoginReq) returns (LoginResp);
  rpc Logout(LogoutReq) returns (LogoutResp);
  rpc ChangePassword(ChangePasswordReq) returns (ChangePasswordResp);

  // Book
  rpc GetBookList(GetBookListReq) returns (GetBookListResp);
  rpc CreateBook(CreateBookReq) returns (CreateBookResp);
  rpc GetBookDetail(GetBookDetailReq) returns (GetBookDetailResp);
  rpc SetBookRating(SetBookRatingReq) returns (SetBookRatingResp);
  rpc DeleteBook(DeleteBookReq) returns (DeleteBookResp);

  // Recommend
  // 先只做书籍的个性化推荐，协同过滤推荐算法，还要考虑混合新鲜内容以及新用户的冷启动问题
  rpc GetRecommendedBooks(GetRecommendedBooksReq) returns (GetRecommendedBooksResp);

  // Interaction
  rpc RecordBookView(RecordBookViewReq) returns (RecordBookViewResp);
  rpc RecordBookRating(RecordBookRatingReq) returns (RecordBookRatingResp);
  rpc RecordBookComment(RecordBookCommentReq) returns (RecordBookCommentResp);

  // Topic
  rpc GetTopicList(GetTopicListReq) returns (GetTopicListResp);
  rpc CreateTopic(CreateTopicReq) returns (CreateTopicResp);
  rpc GetTopicDetail(GetTopicDetailReq) returns (GetTopicDetailResp);
  rpc LikeTopic(LikeTopicReq) returns (LikeTopicResp);
  rpc DeleteTopic(DeleteTopicReq) returns (DeleteTopicResp);

  // Follow
  rpc FollowUser(FollowUserReq) returns (FollowResp);
  rpc UnfollowUser(UnfollowUserReq) returns (FollowResp);
  rpc GetFollowingList(GetFollowingReq) returns (FollowListResp);
  rpc GetFollowersList(GetFollowersReq) returns (FollowListResp);

  // Manager
  rpc GetUserList(GetUserListReq) returns (GetUserListResp);
  rpc GetTagList(GetTagListReq) returns (GetTagListResp); // 书籍会有兴趣标签，在创建书籍时会添加
  rpc AddTag(AddTagReq) returns (AddTagResp);
  rpc DeleteTag(DeleteTagReq) returns (DeleteTagResp);
}
message DeleteUserReq { uint32 user_id = 1; }
message DeleteUserResp {}

message GetUserListReq {
  uint32 page = 1;
  uint32 page_size = 2;
}

message GetUserListResp { repeated UserInfo users = 1; }
message RecordBookCommentReq {
  uint32 user_id = 1;
  uint32 book_id = 2;
}

message RecordBookCommentResp {}

// Tag Messages
message AddTagReq { string name = 1; }

message AddTagResp {
  uint32 id = 1;
  string message = 2;
}

message DeleteTagReq { uint32 id = 1; }

message DeleteTagResp { string message = 1; }
message GetTagListReq {
  uint32 page = 1;
  uint32 page_size = 2;
}
message GetTagListResp { repeated Tag tags = 1; }

message Tag {
  uint32 id = 1;
  string name = 2;
}
// Follow Messages
message FollowUserReq {
  uint32 user_id = 1;
  uint32 follow_id = 2;
}

message UnfollowUserReq {
  uint32 user_id = 1;
  uint32 follow_id = 2;
}

message GetFollowingReq {
  uint32 user_id = 1;
  uint32 page = 2;
  uint32 page_size = 3;
}

message GetFollowersReq {
  uint32 user_id = 1;
  uint32 page = 2;
  uint32 page_size = 3;
}

message FollowListResp {
  repeated GetUserProfileResp users = 1;
  uint32 total = 2;
}

message FollowResp { string message = 1; }

message UserInfo {
  uint32 id = 1;
  string username = 2;
  string nickname = 3;
  string avatar = 4;
  string bio = 5;
}

// Register Req
message RegisterReq {
  string username = 1;
  string password = 2;
  string nickname = 3;
  string avatar = 4;
  string bio = 5;
  string email = 6;
}

// Register Resp
message RegisterResp { string message = 1; }

// GetUserProfile Req
message GetUserProfileReq { uint32 user_id = 1; }

// GetUserProfile Resp
message GetUserProfileResp {
  uint32 id = 1;
  string username = 2;
  string nickname = 3;
  string avatar = 4;
  string bio = 5;
}

// UpdateUserProfile Req
message UpdateUserProfileReq {
  uint32 user_id = 1;
  string nickname = 2;
  string avatar = 3;
  string bio = 4;
}

// UpdateUserProfile Resp
message UpdateUserProfileResp { string message = 1; }

// UploadAvatar Req
message UploadAvatarReq {
  uint32 user_id = 1;
  bytes avatar = 2;
}

// UploadAvatar Resp
message UploadAvatarResp {
  string avatar_path = 1;
  string message = 2;
}

// Auth Messages
message LoginReq {
  string username = 1;
  string password = 2;
}

message LoginResp {
  string token = 1;
  string message = 2;
}

message LogoutReq { string token = 1; }

message LogoutResp { string message = 1; }

message ChangePasswordReq {
  uint32 user_id = 1;
  string old_password = 2;
  string new_password = 3;
}

message ChangePasswordResp { string message = 1; }

// Book Messages
message GetBookListReq {
  uint32 page = 1;
  uint32 page_size = 2;
}

message GetBookListResp {
  repeated Book books = 1;
  uint32 total = 2;
}

message Book {
  uint32 id = 1;
  string title = 2;
  string author = 3;
  string cover = 4;
  string description = 5;
}

message CreateBookReq {
  string title = 1;
  string author = 2;
  string cover = 3;
  string description = 4;
}

message CreateBookResp {
  uint32 id = 1;
  string message = 2;
}

message GetBookDetailReq { uint32 id = 1; }

message GetBookDetailResp { Book book = 1; }

message SetBookRatingReq {
  uint32 id = 1;
  string title = 2;
  string author = 3;
  string cover = 4;
  string description = 5;
}

message SetBookRatingResp { string message = 1; }

message DeleteBookReq { uint32 id = 1; }

message DeleteBookResp { string message = 1; }

// Recommend Messages
message GetRecommendedBooksReq {
  uint32 user_id = 1;
  uint32 limit = 2;
}

message GetRecommendedBooksResp { repeated Book books = 1; }

// Interaction Messages
message RecordBookViewReq {
  uint32 user_id = 1;
  uint32 book_id = 2;
}

message RecordBookViewResp { string message = 1; }

message RecordBookRatingReq {
  uint32 user_id = 1;
  uint32 book_id = 2;
  uint32 rating = 3;
}

message RecordBookRatingResp { string message = 1; }

// Topic Messages
message GetTopicListReq {
  uint32 page = 1;
  uint32 page_size = 2;
}

message GetTopicListResp {
  repeated Topic topics = 1;
  uint32 total = 2;
}

message Topic {
  uint32 id = 1;
  string title = 2;
  string content = 3;
  uint32 user_id = 4;
}

message CreateTopicReq {
  string title = 1;
  string content = 2;
  uint32 user_id = 3;
}

message CreateTopicResp {
  uint32 id = 1;
  string message = 2;
}

message GetTopicDetailReq { uint32 id = 1; }

message GetTopicDetailResp { Topic topic = 1; }

message LikeTopicReq {
  uint32 id = 1;
  string title = 2;
  string content = 3;
}

message LikeTopicResp { string message = 1; }

message DeleteTopicReq { uint32 id = 1; }

message DeleteTopicResp { string message = 1; }